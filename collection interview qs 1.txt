Email
*
Record dhamuarun143@gmail.com as the email to be included with my response
1. The left triangle star pattern is also quite a simple pattern. It has a shape of a triangle with its perpendicular line at the left side.

*
package practice;

import java.util.Scanner;

public class lefttriangle {
	public static void main(String[]args) {
		 Scanner w =new Scanner(System.in);
		   System.out.println("Enter the number:");
		    int num=w.nextInt();
		   // int j=0;
		    for (int i=1;i<num;i++) {
		    	
		    	for (int s=1;s<2*(num-i);s++) {
		    	    System.out.print(" ");
		    	}
		    	for (int j=1;j<=i;j++) {
				    		System.out.print("* ");	    		
		    	}
		    	System.out.println();
		    }
	}

}
output:
Enter the number:
5
        * 
      * * 
    * * * 
 * * * * 

2.  A prime number is a natural number that is divisible by 1 and itself only. For example, 2, 3, 5, 7, etc. are prime numbers.

*
 
This is a required question
3. WRITE A PROGRAM FOR FIBONACCI USING RECURSION CONCEPT.

*
package method_programs;
import java.util.Scanner;
public class fib_in_recursion {
static int a=0,s=0,b=1;
public static int fib(int n) {
if(n==0) {
return s=a+b;
}
s=a+b;
a=b;
b=s;
System.out.print(s+" ");
return fib(n-1);
}
public static void main(String[] args) {
Scanner s=new Scanner(System.in);
System.out.println("Enter the value :");
int n=s.nextInt();
//int n=8;
System.out.println("The fibannaci series :");
System.out.print("0 "+b+" ");
System.out.println(fib(n));
}
}

output :

Enter the value :
8
The fibannaci series :
0 1 1 2 3 5 8 13 21 34 55
4. Find the square root of a number using a binary search(recursion)

*
 
This is a required question
5. Move all negative number to beginning  and positive number to end ?

A={1,-1,-3,4,6,5};  Output:A={-3,-1,1,4,5,6}; 

*
package arrays;
public class arangearray {
public static void main(String[] args) {
int num[]= {1,-1,-3,4,6,5};
int t=0;
for(int i=0;i<num.length;i++) {
for(int j=i+1;j<num.length;j++) {
if(num[i]>num[j]) {
t=num[i];
num[i]=num[j];
num[j]=t;
}
}
}System.out.print("{");
for(int i=0;i<num.length;i++) {
System.out.print(num[i]+",");
}System.out.print("}");
}
}

output :

{-3,-1,1,4,5,6,}
6. Add two matrices of the same size.

*
package arrays;
import java.util.ArrayList;
public class matrix2d {
	public static void main(String[] args) {
		
	
int num[][]={{12,23,43},{4,5,19},{8,7,9}};
int sum=0; 
System.out.println("columns:");
for(int i=0;i<num.length;i++) {
	for(int j=0;j<num.length;j++) {
		System.out.print(num[i][j]+" ");
		sum+=num[i][j];
	}
	System.out.println("sum of column :"+sum);
	System.out.println("---------------------");
	sum=0;
}
System.out.println("rows:");
for(int j=0;j<num.length;j++){

for(int i=0;i<num.length;i++){
		System.out.print(num[j][i]+" ");
		sum+=num[i][j]; 
	}
	
	System.out.println("sum of  row  :"+sum);
	System.out.println("|");
	//System.out.println("");
	sum=0;
}
	}
}



output:
columns:
12 23 43 sum of column :78
---------------------
4 5 19 sum of column :28
---------------------
8 7 9 sum of column :24
---------------------
rows:
12 23 43 sum of  row  :24
|
4 5 19 sum of  row  :35
|
8 7 9 sum of  row  :71
|

7. . Find the duplicate values of an array of integer values

*
package arrays;
public class duplicatevalue {
public static void main(String[] args) {
int num[]= {2,3,1,4,5,3,4};
System.out.println("Duplicate elements :");
 for (int i=0;i<num.length;i++) {
 for(int j=i+1;j<num.length;j++) {
 if(num[i]==num[j]) {
 System.out.println(num[i]);
 }
 }
 }
}
}
output:
Duplicate elements :
3
4
8.  . Find missing number from an array
*
package arrays;
public class missingnum {
void missingnum() {
int num[]= {1,2,4,5,6,8,7};
int sum1=0,sum2=0;
for(int i=0;i<num.length;i++) {
sum1+=num[i];
}
for(int i=1;i<=8;i++) {
 sum2+=i;
}
System.out.println("Missing number is :"+(sum2-sum1));
}
public static void main(String[] args) {
 missingnum m=new missingnum();
 m.missingnum();
}
}
output:
Missing number is :3

 9. Write a program to create a single dimensional array of 20 integers. Print array element in a single line with one space between each element. Also print sum of elements present at even indexes and sum of elements present at odd indexes in array
*
package arrays;
import java.util.Scanner;
public class evenindexodd {
 public static void main(String[] args) {
 Scanner s=new Scanner(System.in);
 int[] num = new int[20];
 int evenS = 0;
 int oddS = 0;
 System.out.print("Enter required Array elements: ");
 int elements=s.nextInt();
 for (int i = 0; i < elements; i++) {
 num[i] = i + 1;
 }
 for (int j = 0; j <num.length; j++) {
 System.out.print(num[j] + " ");
 if (j % 2 == 0) {
 evenS += num[j];
 } else {
 oddS += num[j];
 }
 }
 System.out.println();
 System.out.println("Sum of elements at even indexes: " + evenS);
 System.out.println("Sum of elements at odd indexes: " + oddS);
 }
}

output :
Enter required Array elements: 20
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
Sum of elements at even indexes: 100
Sum of elements at odd indexes: 110
10. Write a program which generates 30 terms of Fibonacci no in an array and then prints it.
*
package arrays;

import java.util.Scanner;

public class fibanaciarray {
	public static void main(String[]args) {
	      int a=0,b=1,s=0;
	     int[]num=new int[30];
	     Scanner sc=new Scanner(System.in);
	     System.out.println("enter the num:");
	     int n=sc.nextInt();	     
	     System.out.print(a+" ");
	     System.out.print(b);
	     for(int i=1;i<=n;i++){
	    	 s=a+b;
	    	 System.out.print(" "+s);
	    	 a=b;
	    	 b=s;
	     }
	}
}
output:
enter the num:
30
0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229 832040 1346269
Never submit passwords through Google Forms.
This content is neither created nor endorsed by Google. Report Abuse - Terms of Service - Privacy Policy
Google Forms